Parser and lexer:

* Support for parentheses
* Type casts
* Aggregation
* Trinary operator ?:
* Allow location specifiers to be attached to constants
* Unicode identifiers and string literals
* Locking / concurrency control
* In string literals, support the "\000" syntax (Octal ASCII
  character) from C89; or perhaps some syntax for specifying Unicode
  code points?
* Error reporting; location of syntax error

Planner:
* Generate implied equalities from the qualifier list
* Avoid Cartesian products, if possible

Executor/Router/Operators:
* Consider writing a specialized allocator for Tuples
* Don't copy WorkItem in the router: have the queue store kind + pointer directly

Broader issues:

* Testing
* Error handling
* Add a "$LOCALHOST" variable that expands to the network address of
  the evaluating COL instance
* Invent something similar to makeNode() from Postgres: infer node
  size from node type tag
* Make use of profile-guided optimization
* Consider caching per-tuple hash code
